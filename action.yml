name: 'Set up MATLAB'
description: 'Set up env vars for MATLAB'
author: 'Ray Zimmerman'

inputs:
  os:
    description: 'required for ipopt to distinguish ubuntu-18.04 from 20.04/latest'
    required: false
    default: 'ubuntu-latest'
  nojvm:    # id of input
    description: 'uses -nojvm flag, if true (default = true)'
    required: false
    default: true
  ipopt:
    description: 'builds and installs IPOPT interface, if true (default = false)'
    required: false
    default: false
  ipopt-cached:
    description: 'true means IPOPT is installing from a cached build'
    required: false
    default: false
  osqp:
    description: 'builds and installs OSQP interface, if true (default = false)'
    required: false
    default: false
  osqp-cached:
    description: 'true means OSQP is installing from a cached build'
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Get run-matlab-command
      run: |
        wget -O /usr/local/bin/run-matlab-command https://ssd.mathworks.com/supportfiles/ci/run-matlab-command/v2/glnxa64/run-matlab-command
        chmod +x /usr/local/bin/run-matlab-command
      shell: bash
    - name: Configure MATLAB
      run: |
        export MATLAB_REL=`run-matlab-command "fprintf(regexp(version, '(?<=\().*(?=\))', 'match', 'once'))"`
        echo "MATLAB_REL=${MATLAB_REL}" >> $GITHUB_ENV
        echo "ML_NAME=MATLAB" >> $GITHUB_ENV
        echo "ML_CMD=run-matlab-command" >> $GITHUB_ENV
        echo "ML_PATHVAR=MATLABPATH" >> $GITHUB_ENV
      shell: bash
#         wget -O /usr/local/bin/run-matlab-command https://ssd.mathworks.com/supportfiles/ci/run-matlab-command/v2/maca64/run-matlab-command
#         export MATLAB_VER=`matlab -nojvm -batch "fprintf('%s', ver('matlab').Version)"`
#         export MATLAB_REL=`ls /opt/hostedtoolcache/MATLAB`

    - name: Set MATLAB_VER, ML_VER
      run: |
        export MATLAB_VER=${MATLAB_REL}
        echo "MATLAB_VER=${MATLAB_VER}" >> $GITHUB_ENV
        echo "ML_VER=${MATLAB_VER}" >> $GITHUB_ENV
      shell: bash

    - name: Build OSQP
      run: |
        ${{ inputs.osqp }} && (${{ inputs.osqp-cached }} && echo "Include OSQP - cached - skip build" || echo "Build OSQP - not cached") || echo "Skip OSQP"
        ${{ inputs.osqp }} && export OSQP_PATH=$HOME/build/osqp-matlab
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && [ ! -d $HOME/build ] && mkdir -p $HOME/build
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && cd $HOME/build
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && git clone --recursive https://github.com/oxfordcontrol/osqp
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && git clone --recurse-submodules https://github.com/oxfordcontrol/osqp-matlab
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && mkdir -p $HOME/build/osqp/build
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && [ ! -d $HOME/install ] && mkdir -p $HOME/install
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && cd $HOME/build/osqp/build
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && cmake -DCMAKE_INSTALL_PREFIX=$HOME/install -G "Unix Makefiles" ..
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && cmake --build .
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && cmake --install .
        ${{ inputs.osqp }} && echo "OSQP_PATH=${OSQP_PATH}" >> $GITHUB_ENV
        echo "-"
      shell: bash

    - name: Build and install OSQP MATLAB interface
      run: |
        ${{ inputs.osqp }} && echo "Install OSQP interface" || echo "Skip OSQP interface"
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && ls -al $HOME/install/include/osqp
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && cd $HOME/build/osqp-matlab
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && $ML_CMD "make_osqp"
        ${{ inputs.osqp }} && ! ${{ inputs.osqp-cached }} && ls -al
        ${{ inputs.osqp }} && echo "$ML_CMD \"addpath('${OSQP_PATH}'); savepath('${GITHUB_WORKSPACE}/pathdef.m')\""
        ${{ inputs.osqp }} && $ML_CMD "addpath('${OSQP_PATH}'); savepath('${GITHUB_WORKSPACE}/pathdef.m')"
        echo "-"
      shell: bash

    # expects that Octave and IPOPT libraries have already been installed
    - name: Fetch IPOPT MATLAB interface
      run: |
        ${{ inputs.ipopt }} && (${{ inputs.ipopt-cached }} && echo "Include IPOPT - cached - skip fetch" || echo "Fetch IPOPT - not cached") || echo "Skip IPOPT"
        ${{ inputs.ipopt }} && export IPOPT_PATH=$HOME/build/ipopt
        ${{ inputs.ipopt }} && ! ${{ inputs.ipopt-cached }} && mkdir -p $IPOPT_PATH
        ${{ inputs.ipopt }} && ! ${{ inputs.ipopt-cached }} && ${{ inputs.os == 'ubuntu-18.04' }} && curl -SL https://github.com/ebertolazzi/mexIPOPT/raw/master/toolbox/bin/linux_4/ipopt_linux_4.mexa64 --output $IPOPT_PATH/ipopt.mexa64
        ${{ inputs.ipopt }} && ! ${{ inputs.ipopt-cached }} && ${{ inputs.os != 'ubuntu-18.04' }} && curl -SL https://github.com/ebertolazzi/mexIPOPT/raw/master/toolbox/bin/linux_5/ipopt_linux_5.mexa64 --output $IPOPT_PATH/ipopt.mexa64
        ${{ inputs.ipopt }} && ! ${{ inputs.ipopt-cached }} && curl -SL https://github.com/ebertolazzi/mexIPOPT/raw/master/toolbox/lib/ipopt_auxdata.m --output $IPOPT_PATH/ipopt_auxdata.m
        ${{ inputs.ipopt }} && ! ${{ inputs.ipopt-cached }} && curl -SL https://github.com/ebertolazzi/mexIPOPT/raw/master/toolbox/lib/ipopt.m --output $IPOPT_PATH/ipopt.m
        ${{ inputs.ipopt }} && echo "IPOPT_PATH=${IPOPT_PATH}" >> $GITHUB_ENV
        echo "-"
      shell: bash

    - name: Install IPOPT MATLAB interface
      run: |
        ${{ inputs.ipopt }} && echo "Install IPOPT interface" || echo "Skip IPOPT interface"
        ${{ inputs.ipopt }} && echo "$ML_CMD \"addpath('${IPOPT_PATH}'); savepath('${GITHUB_WORKSPACE}/pathdef.m')\""
        ${{ inputs.ipopt }} && $ML_CMD "addpath('${IPOPT_PATH}'); savepath('${GITHUB_WORKSPACE}/pathdef.m')"
        echo "-"
      shell: bash

branding:
  icon: 'zap'
  color: 'yellow'
